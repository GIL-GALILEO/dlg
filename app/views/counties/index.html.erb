<style type="text/css">
  .info {
    padding: 6px 8px;
    font: 14px/16px Arial, Helvetica, sans-serif;
    background: white;
    background: rgba(255,255,255,0.8);
    box-shadow: 0 0 15px rgba(0,0,0,0.2);
    border-radius: 5px;
  }
  .info h4 {
    margin: 0 0 5px;
    color: #777;
  }
</style>

<div class="col-md-8">
  <div id="mapid"></div>
</div>
<div class="col-md-4">
  <ul class="counties-list">
    <% @counties.each do |county| %>
        <%= render 'county', county: county %>
    <% end %>
  </ul>
</div>

<script type="text/javascript">

    var map, geojson, tiles, labelsLayer, mapLbels;

    var counties = <%= raw @counties.map { |c| c.geo_hash.to_json } %>;
    var counties_geojson = counties.map(JSON.parse);

    map = L.map('mapid', {
        center: [32.9866, -83.6487],
        zoom: 7
    });

    labelsLayer = map.createPane('labels');
    labelsLayer.style.zIndex = 650;
    labelsLayer.style.pointerEvents = 'none';

    var info = L.control();

    info.onAdd = function (map) {
        this._div = L.DomUtil.create('div', 'info');
        this.update();
        return this._div
    };

    info.update = function (props) {
        this._div.innerHTML = (props ?
            '<b>' + props.name + '</b><br />' + props.count + ' records'
            : 'Georgia Counties');
    };

    info.addTo(map);

    tiles = L.tileLayer(
//        'http://{s}.tile.openstreetmap.org/',
        'http://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png',
        {
            id: 'osm.default',
//            attribution: '© OpenStreetMap <a href="www.openstreetmap.org/copyright">License</a>'
            attribution: '©OpenStreetMap, ©CartoDB'
        }
    ).addTo(map);

    mapLabels = L.tileLayer('http://{s}.basemaps.cartocdn.com/light_only_labels/{z}/{x}/{y}.png', {
        attribution: '©OpenStreetMap, ©CartoDB',
        pane: 'labels'
    }).addTo(map);

    geojson = L.geoJSON(counties_geojson, {
        style: style,
        onEachFeature: onEachFeature
    }).addTo(map);

    function getColor(d) {
        return  d > 10000 ? '#238b45' :
                d > 1000  ? '#74c476' :
                d > 100   ? '#bae4b3' :
                            '#edf8e9';
    }

    function style(feature) {
        return {
            fillColor: getColor(feature.properties.count),
            weight: 2,
            opacity: 1,
            color: 'white',
            dashArray: '3',
            fillOpacity: 0.5
        }
    }

    function highlightFeature(e) {
        var layer = e.target;

        layer.setStyle({
            weight: 5,
            color: '#666',
            dasharray: '',
            fillOpacity: 0.9
        });

        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
            layer.bringToFront();
        }

        info.update(layer.feature.properties);
    }

    function resetHighlight(e) {
        geojson.resetStyle(e.target);
        info.update();
    }

    function whenClicked(e) {
        window.location.href = this.feature.properties.href;
    }

    function onEachFeature(feature, layer) {
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: whenClicked,
        });
    }

</script>