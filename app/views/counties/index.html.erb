<% content_for(:page_title) { t('titles.counties') } %>
<% content_for :head do %>
<style type="text/css">
  .info {
    padding: 6px 8px;
    font: 14px/16px Arial, Helvetica, sans-serif;
    background: white;
    background: rgba(255,255,255,0.8);
    box-shadow: 0 0 15px rgba(0,0,0,0.2);
    border-radius: 5px;
  }
  .info h4 {
    margin: 0 0 5px;
    color: #777;
  }
  .legend {
    line-height: 19px;
    color: #555;
  }
  .legend i {
    width: 18px;
    height: 18px;
    float: left;
    margin-right: 8px;
    opacity: 0.7;
  }
</style>
<% end %>

<section id="counties">
  <div class="container">
    <div class="row">
      <div class="col-md-12">
        <h2>Counties</h2>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div id="mapid"></div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div class="panel panel-default">
          <div class="panel-heading">
            All Georgia Counties
          </div>
          <table id="#counties-table2" class="table table-condensed table-hover">
            <thead>
            <tr>
              <th>Name</th>
              <th>Region</th>
              <th>County Seat</th>
              <th>Item Count</th>
              <th>&nbsp;</th>
            </tr>
            </thead>
            <tbody>
            <% @counties.each do |county| %>
              <tr>
                <td><%= link_to county.name, county.href %></td>
                <td>Georgia</td>
                <td>Georgiaville</td>
                <td><span class="badge"><%= number_with_delimiter county.count %></span></td>
                <td><a class="small" href="https://www.georgiaencyclopedia.org/articles/counties-cities-neighborhoods/<%= county.name.downcase.gsub(' ', '-') %>-county" target="_blank">County Info <i class="fa fa-info-circle" aria-hidden="true"></i></a></td>
              </tr>
            <% end %>
            </tbody>
          </table>
        </div>

        <ul class="counties-list list-group">
          <% @counties.each do |county| %>
            <%= render 'county', county: county %>
          <% end %>
        </ul>
      </div>
    </div>
  </div>
</section>

<script type="text/javascript">
    var layer_map = {};
    var map, geojson, tiles, labelsLayer, mapLabels;

    var $countyListDivs = $('.county-pane');

    $countyListDivs.mouseover(function() {
        var highlightLayer = geojson._layers[layer_map[this.className.replace('list-group-item county-pane pane-', '')]];
        highlightFeature({target: highlightLayer})
    });

    $countyListDivs.mouseout(function() {
        var highlightLayer = geojson._layers[layer_map[this.className.replace('list-group-item county-pane pane-', '')]];
        resetHighlight({target: highlightLayer})
    });


    var counties = <%= raw @counties.map { |c| c.geo_hash.to_json } %>;
    var counties_geojson = counties.map(JSON.parse);

    map = L.map('mapid', {
        center: [32.26, -83.19],
        zoom: 7
    });

    labelsLayer = map.createPane('labels');
    labelsLayer.style.zIndex = 650;
    labelsLayer.style.pointerEvents = 'none';

    var info = L.control();
    var legend = L.control({position: 'bottomright'});

    info.onAdd = function (map) {
        this._div = L.DomUtil.create('div', 'info');
        this.update();
        return this._div
    };

    legend.onAdd = function (map) {
        var div = L.DomUtil.create('div', 'info legend'),
            grades = [0, 1000, 10000];
        div.innerHTML += '<p id="legend-label">Number of Records</p>';
        for (var i = 0; i < grades.length; i++) {
            div.innerHTML +=
                '<i style="background:' + getColor(grades[i] + 1) + '"></i> ' +
                grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
        }
        return div
    };

    info.update = function (props) {
        this._div.innerHTML = (props ?
            '<b>' + props.name + '</b><br />' + props.count + ' records'
            : 'Georgia Counties');
    };

    info.addTo(map);
    legend.addTo(map);

    tiles = L.tileLayer(
        'http://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png',
        {
            id: 'osm.default',
            attribution: '©OpenStreetMap, ©CartoDB'
        }
    ).addTo(map);

    mapLabels = L.tileLayer('http://{s}.basemaps.cartocdn.com/light_only_labels/{z}/{x}/{y}.png', {
        attribution: '©OpenStreetMap, ©CartoDB',
        pane: 'labels'
    }).addTo(map);

    geojson = L.geoJSON(counties_geojson, {
        style: style,
        onEachFeature: onEachFeature
    }).addTo(map);

    function getColor(d) {
        return  d > 10000 ? '#93450E' :
                d > 1000  ? '#a86a3e' :
                            '#be8f6e';
    }

    function style(feature) {
        var countyPolyClass = feature.properties.name.toLowerCase().replace(' ', '-');
        return {
            fillColor: getColor(feature.properties.count),
            weight: 2,
            opacity: 1,
            color: 'white',
            dashArray: '3',
            fillOpacity: 0.8,
            className: 'county-' + countyPolyClass
        }
    }

    function highlightFeature(e) {
        var layer = e.target;

        layer.setStyle({
            weight: 5,
            color: '#666',
            dasharray: '',
            fillOpacity: 0.5
        });

        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
            layer.bringToFront();
        }

        info.update(layer.feature.properties);
    }

    function resetHighlight(e) {
        geojson.resetStyle(e.target);
        info.update();
    }

    function whenClicked(e) {
        window.location.href = this.feature.properties.href;
    }

    function onEachFeature(feature, layer) {
        var countyPolyClass = feature.properties.name.toLowerCase().replace(' ', '-');
        layer_map[countyPolyClass] = L.stamp(layer);
        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight,
            click: whenClicked
        });
    }
</script>